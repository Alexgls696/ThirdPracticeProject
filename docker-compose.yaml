services:
  user-details-db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - user_details_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - user-details-network


    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}" ]
      interval: 15s
      timeout: 10s
      retries: 5

  user-details-service:
    build:
      context: ./UserDetailsService #Путь к docker-file
    image: user-details-app #имя образа в результате сборки

    environment:
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    ports:
      - "8081:8081"
    depends_on:
      user-details-db:
        condition: service_healthy
    networks:
      - user-details-network


  credit_story_db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: ${CREDIT_STORY_DB_NAME}
      POSTGRES_USER: ${CREDIT_STORY_USER}
      POSTGRES_PASSWORD: ${CREDIT_STORY_PASSWORD}
    ports:
      - "5435:5432"
    volumes:
      - credit_story_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${CREDIT_STORY_USER} -d ${CREDIT_STORY_DB_NAME}" ]
      interval: 15s
      timeout: 10s
      retries: 5



volumes:
  user_details_data:
  credit_story_data:

networks:
  user-details-network:
    driver: bridge
  credit_story_network:
    driver: bridge
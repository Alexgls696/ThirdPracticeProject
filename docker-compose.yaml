services:
  user-details-db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: ${USERS_DB_NAME}
      POSTGRES_USER: ${ALL_DB_USERNAME}
      POSTGRES_PASSWORD: ${ALL_DB_PASSWORD}
    volumes:
      - user_details_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - services-network

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${ALL_DB_USERNAME} -d ${USERS_DB_NAME}" ]
      interval: 15s
      timeout: 10s
      retries: 5

  credit-story-db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: ${CREDIT_STORY_DB_NAME}
      POSTGRES_USER: ${ALL_DB_USERNAME}
      POSTGRES_PASSWORD: ${ALL_DB_PASSWORD}
    ports:
      - "5435:5432"
    volumes:
      - credit_story_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${ALL_DB_USERNAME} -d ${CREDIT_STORY_DB_NAME}" ]
      interval: 15s
      timeout: 10s
      retries: 5

    networks:
      services-network:

  user-details-service:
    build:
      context: ./UserDetailsService #Путь к docker-file
    image: user-details-app #имя образа в результате сборки

    environment:
      USER_DETAILS_DB_URL: ${USER_DETAILS_DB_URL}
      ALL_DB_USERNAME: ${ALL_DB_USERNAME}
      ALL_DB_PASSWORD: ${ALL_DB_PASSWORD}
    ports:
      - "8081:8081"
    depends_on:
      user-details-db:
        condition: service_healthy
    networks:
      - services-network

  credit-story-service:
    build:
      context: ./CreditStoryService
    image: credit-story-app
    environment:
      CREDIT_STORY_DB_URL: ${CREDIT_STORY_DB_URL}
      ALL_DB_USERNAME: ${ALL_DB_USERNAME}
      ALL_DB_PASSWORD: ${ALL_DB_PASSWORD}
    ports:
      - "8082:8082"
    depends_on:
      credit-story-db:
        condition: service_healthy
    networks:
      - services-network

  center-service:
    build:
      context: ./CenterService
    image: center-service-app
    environment:
      USER_DETAILS_SERVICE_URL: ${USER_DETAILS_SERVICE_URL}
      CREDIT_STORY_SERVICE_URL: ${CREDIT_STORY_SERVICE_URL}
      CLIENT_URL: ${CLIENT_URL}
    ports:
      - "8080:8080"
    networks:
      services-network:
    depends_on:
      - user-details-service
      - credit-story-service

  client-application:
    build:
      context: ./ClientApplication
    image: client-application-app
    ports:
      - "8090:8090"

volumes:
  user_details_data:
  credit_story_data:

networks:
  services-network:
    driver: bridge